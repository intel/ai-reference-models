#
# -*- coding: utf-8 -*-
#
# Copyright (c) 2023 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#

version: '3'
services:
  tf-resnet50v1-5-inference:
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-${OS:-ubuntu}-image-recognition-tf-resnet50v1-5-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        OS: ${OS:-ubuntu}
        TF_BASE_IMAGE: ${TF_BASE_IMAGE:-intel/intel-optimized-tensorflow}
        TF_BASE_TAG: ${TF_BASE_TAG:-centos-tf2.14-py310}
      dockerfile: docker/tf-cpu/tf-resnet50v1-5-inference/tf-resnet50v1-5-inference.Dockerfile-${OS:-ubuntu}
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
  tf-bert-large-inference:
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-${OS:-ubuntu}-language-modeling-tf-bert-large-inference
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        TF_BASE_IMAGE: ${TF_BASE_IMAGE:-intel/intel-optimized-tensorflow}
        TF_BASE_TAG: ${TF_BASE_TAG:-centos-tf2.14-py310}
      dockerfile: docker/tf-cpu/tf-bert-large-inference/tf-bert-large-inference.Dockerfile-${OS:-ubuntu}
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
  tf-bert-large-pretraining:
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-${OS:-ubuntu}-language-modeling-tf-bert-large-pretraining
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        TF_BASE_IMAGE: ${TF_BASE_IMAGE:-intel/intel-optimized-tensorflow}
        TF_BASE_TAG: ${TF_BASE_TAG:-2.13-pip-base}
      dockerfile: docker/tf-cpu/tf-bert-large-pretraining/tf-bert-large-pretraining.Dockerfile-${OS:-ubuntu}
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
  tf-resnet50v1-5-training:
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-${OS:-ubuntu}-image-recognition-tf-resnet50v1-5-training
    pull_policy: always
    build:
      context: ../../
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        TF_BASE_IMAGE: ${TF_BASE_IMAGE:-intel/intel-optimized-tensorflow}
        TF_BASE_TAG: ${TF_BASE_TAG:-2.13-pip-base}
      dockerfile: docker/tf-cpu/tf-resnet50v1-5-training/tf-resnet50v1-5-training.Dockerfile-${OS:-ubuntu}
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"
