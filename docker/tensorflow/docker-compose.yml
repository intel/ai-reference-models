#
# -*- coding: utf-8 -*-
#
# Copyright (c) 2023 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
services:
  resnet50v1_5-inference-gpu:
    build:
      context: ../../
      args:
        TF_BASE_IMAGE: ${TF_BASE_IMAGE:-intel/intel-extension-for-tensorflow}
        TF_BASE_TAG: ${TF_BASE_TAG:-2.15.0.1-xpu}
        no_proxy: ''
        NO_PROXY: ''
        https_proxy: '${https_proxy}'
        http_proxy: '${http_proxy}'
        HTTP_PROXY: '${HTTP_PROXY}'
        HTTPS_PROXY: '${HTTPS_PROXY}'
        INT8_MODEL_URL: ${INT8_MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/gpu/resnet50_v1_int8.pb}
        MODEL_URL: ${MODEL_URL:-https://storage.googleapis.com/intel-optimized-tensorflow/models/3_1/resnet50_v1.pb}
      dockerfile: docker/tensorflow/resnet50v1_5/inference/gpu/tf-gpu-resnet50v1-5-inference.Dockerfile
    command: >
      sh -c "python -c 'import tensorflow as tf; print(tf.__version__);from tensorflow.python.client import device_lib; print(device_lib.list_local_devices())'"
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-recognition-tf-gpu-resnet50v1-5-inference
    cap_drop:
      - NET_RAW
  maskrcnn-inference-gpu:
    build:
      dockerfile: docker/tensorflow/maskrcnn/inference/gpu/tf-flex-series-maskrcnn-inference.Dockerfile
    extends: resnet50v1_5-inference-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-segmentation-tf-flex-gpu-maskrcnn-inference
    cap_drop:
      - NET_RAW
  wide_deep-_large_ds-inference-gpu:
    build:
      dockerfile: docker/tensorflow/wide_deep_large_ds/inference/gpu/tf-flex-series-wide-deep-large-inference.Dockerfile
    extends: resnet50v1_5-inference-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-recognition-tf-flex-gpu-wide-deep-large-inference
    cap_drop:
      - NET_RAW
  stable_diffusion-inference-gpu:
    build:
      dockerfile: docker/tensorflow/stable_diffusion/inference/gpu/tf-flex-series-stable-diffusion-inference.Dockerfile
    extends: resnet50v1_5-inference-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-generative-ai-tf-flex-gpu-stable-diffusion-inference
    cap_drop:
      - NET_RAW
  efficientnet-inference-gpu:
    build:
      dockerfile: docker/tensorflow/efficientnet/inference/gpu/tf-flex-series-efficientnet-inference.Dockerfile
    extends: resnet50v1_5-inference-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-recognition-tf-flex-gpu-efficientnet-inference
    cap_drop:
      - NET_RAW
  resnet50v1_5-training-gpu:
    build:
      args:
        MPI_VER: ${MPI_VER:-2021.13.1-767}
        CCL_VER: ${CCL_VER:-2021.13.1-31}
        no_proxy: ''
        NO_PROXY: ''
        https_proxy: '${https_proxy}'
        http_proxy: '${http_proxy}'
        HTTP_PROXY: '${HTTP_PROXY}'
        HTTPS_PROXY: '${HTTPS_PROXY}'
      dockerfile: docker/tensorflow/resnet50v1_5/training/gpu/tf-max-series-resnet50v1-5-training.Dockerfile
    extends: resnet50v1_5-inference-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-recognition-tf-max-gpu-resnet50v1-5-training
    cap_drop:
      - NET_RAW
  bert_large-training-gpu:
    build:
      dockerfile: docker/tensorflow/bert_large/training/gpu/tf-max-series-bert-large-training.Dockerfile
    extends: resnet50v1_5-training-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-language-modeling-tf-max-gpu-bert-large-training
    cap_drop:
      - NET_RAW
  maskrcnn-training-gpu:
    build:
      dockerfile: docker/tensorflow/maskrcnn/training/gpu/tf-max-series-maskrcnn-training.Dockerfile
    extends: resnet50v1_5-training-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-segmentation-tf-max-gpu-maskrcnn-training
    cap_drop:
      - NET_RAW
  3d_unet-training-gpu:
    build:
      dockerfile: docker/tensorflow/3d_unet/training/gpu/tf-max-series-3d-unet-training.Dockerfile
    extends: resnet50v1_5-training-gpu
    image: ${REGISTRY}/aiops/mlops-ci:b-${GITHUB_RUN_NUMBER:-0}-image-segmentation-tf-max-gpu-3d-unet-training
    cap_drop:
      - NET_RAW
